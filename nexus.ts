/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import { Context } from "./src/context";

declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, "crud">;
    model: NexusPrisma<TypeName, "model">;
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  EatOutSpotCreateInput: {
    // input type
    author?: NexusGenInputs["UserCreateOneWithoutEatOutSpotsInput"] | null; // UserCreateOneWithoutEatOutSpotsInput
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    name?: string | null; // String
    note?: string | null; // String
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
    url: string; // String!
  };
  EatOutSpotCreateManyWithoutAuthorInput: {
    // input type
    connect?: NexusGenInputs["EatOutSpotWhereUniqueInput"][] | null; // [EatOutSpotWhereUniqueInput!]
    connectOrCreate?:
      | NexusGenInputs["EatOutSpotCreateOrConnectWithoutauthorInput"][]
      | null; // [EatOutSpotCreateOrConnectWithoutauthorInput!]
    create?: NexusGenInputs["EatOutSpotCreateWithoutAuthorInput"][] | null; // [EatOutSpotCreateWithoutAuthorInput!]
  };
  EatOutSpotCreateOrConnectWithoutauthorInput: {
    // input type
    create: NexusGenInputs["EatOutSpotCreateWithoutAuthorInput"]; // EatOutSpotCreateWithoutAuthorInput!
    where: NexusGenInputs["EatOutSpotWhereUniqueInput"]; // EatOutSpotWhereUniqueInput!
  };
  EatOutSpotCreateWithoutAuthorInput: {
    // input type
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    name?: string | null; // String
    note?: string | null; // String
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
    url: string; // String!
  };
  EatOutSpotWhereUniqueInput: {
    // input type
    id?: number | null; // Int
  };
  UserCreateInput: {
    // input type
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    eatOutSpots?:
      | NexusGenInputs["EatOutSpotCreateManyWithoutAuthorInput"]
      | null; // EatOutSpotCreateManyWithoutAuthorInput
    email?: string | null; // String
    name?: string | null; // String
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
  };
  UserCreateOneWithoutEatOutSpotsInput: {
    // input type
    connect?: NexusGenInputs["UserWhereUniqueInput"] | null; // UserWhereUniqueInput
    connectOrCreate?:
      | NexusGenInputs["UserCreateOrConnectWithouteatOutSpotsInput"]
      | null; // UserCreateOrConnectWithouteatOutSpotsInput
    create?: NexusGenInputs["UserCreateWithoutEatOutSpotsInput"] | null; // UserCreateWithoutEatOutSpotsInput
  };
  UserCreateOrConnectWithouteatOutSpotsInput: {
    // input type
    create: NexusGenInputs["UserCreateWithoutEatOutSpotsInput"]; // UserCreateWithoutEatOutSpotsInput!
    where: NexusGenInputs["UserWhereUniqueInput"]; // UserWhereUniqueInput!
  };
  UserCreateWithoutEatOutSpotsInput: {
    // input type
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    email?: string | null; // String
    name?: string | null; // String
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
  };
  UserWhereUniqueInput: {
    // input type
    email?: string | null; // String
    id?: number | null; // Int
  };
}

export interface NexusGenEnums {}

export interface NexusGenScalars {
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenObjects {
  EatOutSpot: {
    // root type
    id: number; // Int!
    name?: string | null; // String
    note?: string | null; // String
    url: string; // String!
  };
  Mutation: {};
  Query: {};
  User: {
    // root type
    email?: string | null; // String
    id: number; // Int!
    name?: string | null; // String
  };
}

export interface NexusGenInterfaces {}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenObjects;

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars;

export interface NexusGenFieldTypes {
  EatOutSpot: {
    // field return type
    id: number; // Int!
    name: string | null; // String
    note: string | null; // String
    url: string; // String!
  };
  Mutation: {
    // field return type
    createOneEatOutSpot: NexusGenRootTypes["EatOutSpot"]; // EatOutSpot!
    createOneUser: NexusGenRootTypes["User"]; // User!
  };
  Query: {
    // field return type
    eatOutSpot: NexusGenRootTypes["EatOutSpot"] | null; // EatOutSpot
    user: NexusGenRootTypes["User"] | null; // User
  };
  User: {
    // field return type
    email: string | null; // String
    id: number; // Int!
    name: string | null; // String
  };
}

export interface NexusGenFieldTypeNames {
  EatOutSpot: {
    // field return type name
    id: "Int";
    name: "String";
    note: "String";
    url: "String";
  };
  Mutation: {
    // field return type name
    createOneEatOutSpot: "EatOutSpot";
    createOneUser: "User";
  };
  Query: {
    // field return type name
    eatOutSpot: "EatOutSpot";
    user: "User";
  };
  User: {
    // field return type name
    email: "String";
    id: "Int";
    name: "String";
  };
}

export interface NexusGenArgTypes {
  Mutation: {
    createOneEatOutSpot: {
      // args
      data: NexusGenInputs["EatOutSpotCreateInput"]; // EatOutSpotCreateInput!
    };
    createOneUser: {
      // args
      data: NexusGenInputs["UserCreateInput"]; // UserCreateInput!
    };
  };
  Query: {
    eatOutSpot: {
      // args
      where: NexusGenInputs["EatOutSpotWhereUniqueInput"]; // EatOutSpotWhereUniqueInput!
    };
    user: {
      // args
      where: NexusGenInputs["UserWhereUniqueInput"]; // UserWhereUniqueInput!
    };
  };
}

export interface NexusGenAbstractTypeMembers {}

export interface NexusGenTypeInterfaces {}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false;
    resolveType: true;
    __typename: false;
  };
};

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes:
    | NexusGenTypes["inputNames"]
    | NexusGenTypes["enumNames"]
    | NexusGenTypes["scalarNames"];
  allOutputTypes:
    | NexusGenTypes["objectNames"]
    | NexusGenTypes["enumNames"]
    | NexusGenTypes["unionNames"]
    | NexusGenTypes["interfaceNames"]
    | NexusGenTypes["scalarNames"];
  allNamedTypes:
    | NexusGenTypes["allInputTypes"]
    | NexusGenTypes["allOutputTypes"];
  abstractTypes: NexusGenTypes["interfaceNames"] | NexusGenTypes["unionNames"];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<
    TypeName extends string,
    FieldName extends string
  > {}
  interface NexusGenPluginInputFieldConfig<
    TypeName extends string,
    FieldName extends string
  > {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
